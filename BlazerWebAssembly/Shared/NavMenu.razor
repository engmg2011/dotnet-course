@using BlazerWebAssembly.Service.IService
@inject ICartService _CartService;
@implements IDisposable;
<nav  class="@NavMenuCssClass navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Blazor project</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="products">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Products Page
                    </NavLink>
                </li>
                <li class="nav-item">
                    <a href="#" class="btn btn-dark position-relative mt-2">
                       <span class="oi oi-cart" aria-hidden="true"></span> Shopping Cart
                      <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @totalCount
                        <span class="visually-hidden">Shopping Cart</span>
                      </span>
                    </a>
                </li>
            </ul>
            <form class="d-flex">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>
</nav> 

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private int totalCount = 0;

    protected override async Task OnInitializedAsync()
    {
        await GetCartCount();
        _CartService.OnChange += StateHasChanged;
    }

    // protected override void OnInitialized()
    // {
    //     _CartService.OnChange += StateHasChanged;
    // }

    public void Dispose()
    {
        _CartService.OnChange -= StateHasChanged;
    }

    public async Task GetCartCount()
    {
        totalCount  = await _CartService.TotalCount();
        StateHasChanged();
    }

}
