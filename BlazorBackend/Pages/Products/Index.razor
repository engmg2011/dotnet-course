@page "/products"
@using ProjectModels
@using BlazorBusiness.Repository.IRepository
@using BlazorDataAccess.DataAccess
@inject IProductRepository _ProductRepository;
@inject NavigationManager _NavigationManager;
@inject IWebHostEnvironment _HostEnvironment;

<a href="/products/create" class="btn btn-outline-primary float-end"> Create Product</a>

<h3>Products list</h3>


@if (_Products == null)
{
    <div class="w-100 m-2">
        <div class="w-100 text-center m-2">
            <p>
                <b>Loading...</b>
            </p>
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only"> </span>
            </div>
        </div>
    </div>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Product name</th>
            <th>Product image</th>
            <th>Category</th>
            <th>Customer favourite</th>
            <th>Operations</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in _Products)
        {
            <tr>
                <td width="100">@product.Id</td>
                <td>@product.Name</td>
                <td width="200">
                    @if (File.Exists( _HostEnvironment.WebRootPath +"/"+ product.ImageUrl))
                    {
                        <img class="img-thumbnail" src="@product.ImageUrl" style="max-height: 80px;" />
                    }
                </td>
                <td>
                    @product.Category?.Name
                </td>
                <td>
                    <input type="checkbox" disabled="disabled" @bind="product.CustomerFavorites">
                </td>
                <td width="300">
                    <a href="/products/@product.Id" class="btn btn-primary">Edit</a>
                    <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#product-@product.Id">Delete</button>
                </td>
                <!-- Modal -->
                <DeleteProductConfirm product="product" GetData="GetData"></DeleteProductConfirm>
            </tr>
        }
        </tbody>
    </table>
}


@code {
    public IEnumerable<ProductDTO> _Products;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(GetData);
    }

    protected async void GetData()
    {
        _Products = await _ProductRepository.GetAll();
    }

}